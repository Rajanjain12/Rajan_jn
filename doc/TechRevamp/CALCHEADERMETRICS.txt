USE `KyobeeTechRevamp`;
DROP procedure IF EXISTS `CALCHEADERMETRICS`;

DELIMITER $$
USE `KyobeeTechRevamp`$$
CREATE DEFINER=`root`@`%` PROCEDURE `CALCHEADERMETRICS`(IN `P_ORGID` INT, OUT `OP_NOWSERVERINGPARTY` INT, OUT `OP_TOTALWAITINGGUEST` INT, OUT `OP_TOTALWAITTIME` INT, OUT `OP_NOOFPARTIESAHEAD` INT, OUT `OP_GUESTTOBENOTIFIED` VARCHAR(55), OUT `OP_GUESTNOTIFIEDWAITTIME` INT, OUT `OP_PERPARTYWAITTIME` INT, OUT `OP_NOTIFYUSERCOUNT` INT, OUT `OP_CLIENTBASE` VARCHAR(50) )
BEGIN


DECLARE  V_DUMMY, V_TOTAL_GUEST , V_NOTIFYUSERCOUNT INT DEFAULT 0;
DECLARE CONTINUE HANDLER FOR SQLSTATE '02000' set V_DUMMY=1;

-- Finding the MIN Rank from the Guest Table for the given Organization
SELECT 
    MIN(RANK)
INTO OP_NOWSERVERINGPARTY FROM
    GUEST
WHERE
    ORGANIZATIONID = P_ORGID AND
    STATUS='CHECKIN' AND CALLOUTCOUNT IS NULL AND INCOMPLETEPARTY IS NULL;
    

-- Finding the TOTAL Guests Waiting for the given Organization
SELECT 
    COUNT(*)
INTO OP_TOTALWAITINGGUEST FROM
    GUEST
WHERE
    ORGANIZATIONID = P_ORGID AND
    STATUS='CHECKIN' AND CALLOUTCOUNT IS NULL AND INCOMPLETEPARTY IS NULL;
    
    
-- Finding the total wait time    
SELECT 
    O.WAITTIME * (OP_TOTALWAITINGGUEST + 1), O.NOTIFYUSERCOUNT , O.WAITTIME,  O.WAITTIME * (O.NOTIFYUSERCOUNT) , O.CLIENTBASE
INTO OP_TOTALWAITTIME , V_NOTIFYUSERCOUNT , OP_PERPARTYWAITTIME, OP_GUESTNOTIFIEDWAITTIME, OP_CLIENTBASE FROM
    ORGANIZATION O
WHERE
    O.ORGANIZATIONID = P_ORGID;
     

-- Setting Notify User Count
SELECT V_NOTIFYUSERCOUNT  INTO OP_NOTIFYUSERCOUNT;


-- Finding no of parties ahead
SELECT OP_TOTALWAITINGGUEST - 1 INTO OP_NOOFPARTIESAHEAD;



-- Change on 05/15 by Jenis Shah (Issue #16). Condition added for Mark as Incomplete and Mark as Not Present

-- IF Total Checked in guests are <= Notify First Threshold then no need to send Level 2 Notification to anyone so return -1
-- 1 needs to be subtracted from V_NOTIFYUSERCOUNT because that record is already updated as either "Mark as Seated", "Mark as Incomplete", "Mark as No Present" or "Mark as Deleted" 
-- Consider Guests 61 to 67. With threshold 5. On marking seated , deleted, not present or incomplete Guests 61 to 65, OP_GUESTTOBENOTIFIED should be 66
-- Since, calculation of OP_GUESTTOBENOTIFIED happens after update statement, 1 needs to be decremented from V_NOTIFYUSERCOUNT
SET V_NOTIFYUSERCOUNT := V_NOTIFYUSERCOUNT - 1;

IF OP_TOTALWAITINGGUEST <= V_NOTIFYUSERCOUNT THEN
   SET OP_GUESTTOBENOTIFIED := -1;
ELSE

  SELECT 
    A.GUESTID  INTO OP_GUESTTOBENOTIFIED 
    FROM
  (SELECT 
        *
    FROM
        GUEST G
    WHERE
        G.ORGANIZATIONID = P_ORGID AND 
        G.STATUS  = 'CHECKIN' AND G.CALLOUTCOUNT IS NULL AND G.INCOMPLETEPARTY IS NULL
    ORDER BY G.RANK
    LIMIT V_NOTIFYUSERCOUNT, 1) A;
    
    
END IF;

END$$

DELIMITER ;

