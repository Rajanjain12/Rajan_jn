USE `KyobeeTechRevamp`;
DROP procedure IF EXISTS `ADDGUESTTECHREVAMP`;

DELIMITER $$
USE `KyobeeTechRevamp`$$
CREATE DEFINER=`root`@`%` PROCEDURE `ADDGUESTTECHREVAMP`(IN `P_ORGID` INT, IN `P_GUESTNAME` VARCHAR(255) CHARACTER SET utf8, IN `P_UUID` VARCHAR(255),IN P_NOOFCHILDREN INT,IN P_NOOFADULTS INT,IN P_NOOFINFANTS INT, IN `P_NOOFPEOPLE` INT, IN `P_LANGUAGEPREFID` INT, IN `P_PARTYTYPE` INT, IN `P_DEVICETYPE` VARCHAR(255), IN `P_DEVICEID` VARCHAR(255), IN `P_CONTACTNO` VARCHAR(45), IN `P_EMAIL` VARCHAR(255), IN `P_PREFTYPE` VARCHAR(15), IN `P_OPTIN` INT, IN `P_NOTE` VARCHAR(255) CHARACTER SET utf8, IN `P_CSVSEATINGPREF` VARCHAR(255), OUT `OP_GUESTID` INT, OUT `OP_GUESTRANK` INT, OUT `OP_NOWSERVERINGPARTY` INT, OUT `OP_TOTALWAITINGGUEST` INT, OUT `OP_TOTALWAITTIME` INT, OUT `OP_NOOFPARTIESAHEAD` INT, OUT `OP_GUESTTOBENOTIFIED` INT, OUT `OP_CLIENTBASE` VARCHAR(50))
BEGIN

DECLARE V_RANK , V_TOTAL_GUEST , V_NOTIFYUSERCOUNT INT;
DECLARE CONTINUE HANDLER FOR SQLSTATE '02000' set V_RANK=1;

-- Lock entire Table 
SELECT * FROM GUEST WHERE ORGANIZATIONID = P_ORGID FOR UPDATE;
 
-- Finding the MAX Rank from the Guest Table for the given Organization
-- Finding the MAX Rank from the Guest Table for the given Organization
SELECT 
    MAX(RANK)
INTO V_RANK FROM
    GUEST
WHERE
    ORGANIZATIONID = P_ORGID;

-- If RANK is NULL set it to 1
IF V_RANK IS NULL THEN
  SET V_RANK = 1;
ELSE
  SET V_RANK = V_RANK +1;  
END IF;
    

-- Insert record into the GUEST Table
INSERT INTO GUEST 
(OrganizationID, Name, Uuid,NoOfChildren,NoOfAdults,NoOfInfants,NoOfPeople, LanguagePrefID , PartyType, DeviceType, DeviceId,ContactNo, Email , PrefType, Optin, Rank, SeatingPreference, Status, Note, CheckinTime,CreatedBy, CreatedAt)
VALUES
(P_ORGID, P_GUESTNAME, P_UUID,P_NOOFCHILDREN,P_NOOFADULTS,P_NOOFINFANTS, P_NOOFPEOPLE, P_LANGUAGEPREFID, P_PARTYTYPE, P_DEVICETYPE, P_DEVICEID, P_CONTACTNO, P_EMAIL, P_PREFTYPE, P_OPTIN, V_RANK, P_CSVSEATINGPREF , 'CHECKIN', P_NOTE, now(),'admin',now());

COMMIT; 

-- Committing the Transaction

-- STORING THE ID
SELECT LAST_INSERT_ID() INTO OP_GUESTID;
SELECT V_RANK INTO OP_GUESTRANK;

-- Call the Procedure to get the header metrics calcualted
CALL `CALCHEADERMETRICS`(P_ORGID, @OP_NOWSERVERINGPARTY, @OP_TOTALWAITINGGUEST, @OP_TOTALWAITTIME , @OP_NOOFPARTIESAHEAD, @OP_GUESTTOBENOTIFIED, @OP_GUESTNOTIFIEDWAITTIME,@OP_PERPARTYWAITTIME, @OP_NOTIFYUSERCOUNT,@OP_CLIENTBASE);


-- Set Return Variables
SELECT @OP_NOWSERVERINGPARTY INTO OP_NOWSERVERINGPARTY;
SELECT @OP_TOTALWAITTIME INTO OP_TOTALWAITTIME;
SELECT @OP_NOOFPARTIESAHEAD INTO OP_NOOFPARTIESAHEAD;
SELECT @OP_GUESTTOBENOTIFIED INTO OP_GUESTTOBENOTIFIED;
SELECT @OP_TOTALWAITINGGUEST INTO OP_TOTALWAITINGGUEST;
SELECT @OP_CLIENTBASE INTO OP_CLIENTBASE;
 
END$$

DELIMITER ;

